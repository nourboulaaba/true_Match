{% extends 'base.html.twig' %}

{% block title %}Recruitment List{% endblock %}

{% block body %}
    <main class="content">
        <div class="container-fluid p-0">
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="d-flex flex-column">
                            <h1 class="h3 mb-2">Recruitment Campaigns</h1>
                            <small class="text-muted">Active and historical recruitment periods</small>
                        </div>
                        <div class="d-flex gap-3">
                            <div class="search-container">
                                <input type="text" id="search-input" class="form-control"
                                       placeholder="Search campaigns..." autocomplete="off">
                            </div>
                            <a href="{{ path('app_recrutement_new') }}" class="btn btn-primary">
                                New Campaign
                            </a>
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    <div class="table-responsive" id="recrutement-table">
                        {{ include('recrutement/_table.html.twig') }}
                    </div>
                </div>
            </div>
        </div>
    </main>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const searchInput = document.getElementById('search-input');
            const tableContainer = document.getElementById('recrutement-table');

            searchInput.addEventListener('input', async (e) => {
                const query = e.target.value.trim();

                try {
                    const response = await fetch(`{{ path('app_recrutement_search') }}?q=${encodeURIComponent(query)}`, {
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest' // Add this header
                        }
                    });

                    tableContainer.innerHTML = await response.text();
                } catch (error) {
                    console.error('Search failed:', error);
                }
            });
        });
        document.addEventListener("DOMContentLoaded", function() {
            // Add click handler to recruitment rows
            document.querySelectorAll('#recrutement-table tr[data-id]').forEach(row => {
                row.addEventListener('click', (e) => {
                    // Ignore clicks on action buttons
                    if (!e.target.closest('.btn')) {
                        const recruitmentId = row.dataset.id;
                        window.location = `/recrutement/${recruitmentId}/entretiens`;
                    }
                });
            });
        });
    </script>
{% endblock %}